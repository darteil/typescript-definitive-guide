{"componentChunkName":"component---src-page-templates-what-is-new-page-what-is-new-page-provider-tsx","path":"/what-is-new/3.4","result":{"pageContext":{"localization":{"lang":"ru","title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи.","appNavigation":[{"id":"index","path":"/","name":"Главная"},{"id":"book-contents","path":"/book/chapters","name":"Оглавление"},{"id":"what-is-new-contents","path":"/what-is-new","name":"Что нового?"},{"id":"pdf","path":"/pdf","name":"PDF Версия"}],"notification":{"behaviorNotification":{"copyLink":"Ссылка скопирована!"}},"layouts":{"shared":{"informers":{"donateInformer":{"minBanner":{"label":"Хочешь поддержать проект финансово?","buttons":{"yes":"Да, хочу! Узнать подробнее...","no":"Нет. Закрыть окно."}},"maxBanner":{"html":{"__html":"Чтобы <b>контент</b> приносил <b>максимальную пользу</b> его <b>необходимо</b> постоянно <b>совершенствовать</b> и <b>адаптировать</b>\n        под каждую новую версию <i>TypeScript</i>. Это отнимает <b>много времени</b> и без Вашей, даже <b>незначительно\n        финансовой</b>, поддержки практически <b>невозможно</b>. Помогая проекту вы прежде всего принимаете <b>участие</b> в\n        <b>развитии</b> профессионального уровня ваших <b>друзей</b>, <b>коллег</b>, <b>подчиненных</b>. Выпусти желание\n        сделать свой мир лучше. <b>Сделай контент для будущих специалистов ещё качественней и доступней!</b>"},"href":"#"}},"watchWithTelegramInformer":{"text":["Хочешь поддерживать свои знания в актуальном состоянии?","Тогда подписывайся на Telegram канал и узнавай обо всех изменениях!"],"subscribeButton":{"label":"Подписаться"}},"contentLevelUpInformer":{"text":"Кажется непонятным и слишком сложным? Чего-то не хватает? Расскажи об этом! Помоги сделать контент более доступным для следующих поколений!","buttons":[{"label":"Сообщить на Github","href":""}]}},"links":{"telegram":"#"},"appContent":{"contentNav":{"prevButton":{"label":"Назад"},"nextButton":{"label":"Вперед"}}},"appHeader":{"navToggleButton":{"tooltips":{"open":["Открыть боковое","меню"],"close":["Закрыть боковое","меню"]}},"appMenu":{"pdfButton":{"href":"#","tooltip":["Скачать","PDF версию"],"label":"Скачать PDF версию"},"telegramButton":{"href":"https://t.me/nauchikus","tooltip":["Следить за","изменениями в","Telegram"],"label":"Следить за изменениями в Telegram"},"githubButton":{"href":"https://github.com/nauchikus/typescript-definitive-guide","tooltip":["Посетить проект на","Github"],"label":"Посетить проект на Github"}},"donateDropdown":{"href":"https://yasobe.ru/na/typescript_definitive_guide","toggleButton":{"label":["Поддержать","финансово"]},"content":{"title":"Сделай контент для будущих поколений ещё качественней и доступней!","subtitle":{"__html":"Контент требует постоянного совершенствования и адаптации под каждую новую версию\nязыка TypeScript.\nЭто отнимает много времени и без Вашей, даже незначительно финансовой, поддержки практически\nневозможно.\nПрими участие в развитии профессионального уровня своих друзей, коллег, подчиненных. Встань на\nсторону небезразличных!"}}},"appSearch":{"inputPlaceholder":"Я ищу...","submitButton":{"ariaLabel":"Отправить"}}},"pdf":{"downloadPdfBookButton":{"title":"Скачать PDF Версию","href":"pdf/TypeScript Подробное Руководство.pdf"}}}},"pages":{"index":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"appDescription":"Книга и документация в одном","subtitleAll":["TypeScript в деталях","TypeScript крупным планом","TypeScript под микроскопом","TypeScript со всех сторон"]}},"book__chapters":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"},"collapseTocButton":{"tooltip":{"openState":"Открыть","closeState":"Закрыть"}}},"secondaryContentBar":{"label":"Оглавление","tocFilterButton":{"tooltip":"Отфильтровать на основе разделов"},"tocCollapseAllButton":{"tooltip":{"openState":"Раскрыть все","closeState":"Закрыть все"}}},"asideLayout":{"tagBarLabel":"Тематические разделы","tagBar":{"cleanFilterButton":"Все разделы"}}}},"book__chapter":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"secondaryContentBar":{"editOnGithubButton":{"tooltip":"Редактировать на Github"}}}},"what-is-new__toc":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"primaryContentBar":{"label":"История нововведений"},"tocItem":{"copyLinkToBufferButton":{"tooltip":"Скопировать ссылку в буфер обмена"}}}},"not-found":{"metadata":{"title":"TypeScript - в деталях","description":"Книга и документация по языку TypeScript, которая шаг за шагом раскрывает весь его потенциал не оставляя без внимания ни одной мелочи."},"gui":{"notFound_404":{"status":"404","title":"Страница не найдена :("}}},"pdf":{"metadata":{"title":"TypeScript - в деталях","description":"Бесплатная pdf книга на русском по языку TypeScript."},"gui":{"title":"TypeScript Подробное Руководство","subtitle":"PDF Версия"}}}},"innovationData":{"versionMMP":"3.4","releaseHistory":[{"version":"3.4","dateRelease":"March 29, 2019","datePublication":"March 29, 2019"}],"mmp":"3.4","innovations":[{"mmp":"3.4","id":"","version":"3.4","innovationName":"Опции компилятора --tsBuildInfoFile","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Opcii_kompilyatora_--tsBuildInfoFile","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"Opcii_kompilyatora_--tsBuildInfoFile\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Опции компилятора --tsBuildInfoFile</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Для того, что бы задать место сохранения файла <code>.tsbuildinfo</code>, в компилятор <em>TypeScript</em> был добавлен флаг <code>--tsBuildInfoFile</code>.</p>\n<p class=\"content__paragraph\"><code>--tsBuildInfoFile</code> - флаг, с помощью которого указывается место сохранения файла <code>.tsbuildinfo</code> генерирующегося при активной опции <code>--incremental</code> и служащий для хранения метаинформации призванной ускорить последующие сборки.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"incremental\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"tsBuildInfoFile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./buildinfo\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars.githubusercontent.com/u/31518738?v=4"}},{"committedDate":"2021-03-21T11:32:13Z","message":"fixed grammar and syntax errors in the text, corrected links","messageHeadline":"fixed grammar and syntax errors in the text, corrected links","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"mindyourlifeguide","bio":"Front-end developer","location":"Kyiv, Ukraine","avatarUrl":"https://avatars.githubusercontent.com/u/35348648?u=d52456eed154db660092623fe6e0ebb516677a95&v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.4/Опции компилятора --tsBuildInfoFile/content.md"},{"mmp":"3.4","id":"","version":"3.4","innovationName":"Опции компилятора --incremental","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Opcii_kompilyatora_--incremental","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"Opcii_kompilyatora_--incremental\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Опции компилятора --incremental</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">В <em>TypeScript</em>, начиная с версии <code>v3.3</code>, при совместном использовании флагов <code>--build</code> и <code>--watch</code>, появилась возможность ускоренной сборки проекта на 50%-75%. Такое ускорение достигается за счет создания при первой сборки метаинформации об изменении файлов хранящейся в памяти. Как можно догадаться, при перезапуске компилятора, метаинформация теряется, а это в свою очередь означает, что процесс ускорения сборки действует только в режиме <code>--watch</code> и не может быть полезно при <em>production</em> сборках.</p>\n<p class=\"content__paragraph\">Для того, что бы достичь ускорения исключительно всех последующих сборок, компилятору <em>TypeScript</em> был добавлен функционал активируемый новым флагом <code>--incremental</code>.</p>\n<p class=\"content__paragraph\"><code>--incremental</code> - флаг, при активации которого, после первой компиляции проекта, в директории заданной атрибутом <code>outDir</code>, создается файл <code>.tsbuildinfo</code>, который хранит метаинформацию об изменении файлов, что позволяет производить ускоренные инкрементальные сборки при всех последующих запусках компилятора.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"incremental\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./dest\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nВ случае, когда имя выходного задается с помощью флага </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">--</span>outFile<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, имя генерируемого файла </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span>tsbuildinfo<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> будет включать в себя название выходного файла (</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">.</span>tsbuildinfo<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> для файла </span><span class=\"token template-punctuation string\">`</span></span>client<span class=\"token punctuation\">.</span>js<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> и </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span>server<span class=\"token punctuation\">.</span>tsbuildinfo<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> для </span><span class=\"token template-punctuation string\">`</span></span>server<span class=\"token punctuation\">.</span>js<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> соответственно).\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">**</span>Примечание<span class=\"token operator\">:</span><span class=\"token operator\">**</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> создатели _TypeScript_ предупреждают заранее, что генерируемые файлы </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span>tsbuildinfo<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> не предназначены для использования сторонними библиотеками, так как их определение, от версии к версии, не будет обладать совместимость.\n\nКроме того, с помощью флага </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">--</span>tsBuildInfoFile<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> можно задать место сохранения файла </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">.</span>tsbuildinfo<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"incremental\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"tsBuildInfoFile\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./buildinfo\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./dest\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars.githubusercontent.com/u/31518738?v=4"}},{"committedDate":"2021-03-21T11:32:13Z","message":"fixed grammar and syntax errors in the text, corrected links","messageHeadline":"fixed grammar and syntax errors in the text, corrected links","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"mindyourlifeguide","bio":"Front-end developer","location":"Kyiv, Ukraine","avatarUrl":"https://avatars.githubusercontent.com/u/35348648?u=d52456eed154db660092623fe6e0ebb516677a95&v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.4/Опции компилятора --incremental/content.md"},{"mmp":"3.4","id":"","version":"3.4","innovationName":"Массивоподобные readonly типы","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Massivopodobnye_readonly_tipy","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"Massivopodobnye_readonly_tipy\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Массивоподобные readonly типы</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Начиная с версии <code>v3.4</code>, в <em>TypeScript</em> появилась возможность объявлять <code>Массивоподобные readonly структуры</code> типы, к которым относятся массивы (<code>Array</code>) и кортежи (<code>Tuples</code>). Данный механизм призван защитить элементы массивоподобных структур от изменения и тем самым повысить типобезопасность программ разрабатываемых на <em>TypeScript</em>. Элементы массивоподобных структур объявленных как <code>readonly</code> невозможно заменить или удалить. Кроме того, в подобные структуры невозможно добавить новые элементы.</p>\n<p class=\"content__paragraph\">Для того, что бы объявить <code>readonly</code> массив или кортеж достаточно указать в сигнатуре типа модификатор <code>readonly</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> array<span class=\"token operator\">:</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Clark'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Массив</span>\n<span class=\"token keyword\">let</span> tuple<span class=\"token operator\">:</span> <span class=\"token keyword\">readonly</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Clark'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Кортеж</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nВ случаи, объявления </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">readonly</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> массива, становится невозможно изменить его элементы с помощью индексной сигнатуры (</span><span class=\"token template-punctuation string\">`</span></span>array<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">)\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">let</span> array<span class=\"token operator\">:</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Clark'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Wayne'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Index signature in type 'readonly number[]' only permits reading.ts(2542)</span>\narray<span class=\"token punctuation\">[</span>array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Batman'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Index signature in type 'readonly number[]' only permits reading.ts(2542)</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nПомимо этого, у </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">readonly</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> массива отсутствуют методы с помощью которым можно изменить элементы массива.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">let</span> array<span class=\"token operator\">:</span> <span class=\"token keyword\">readonly</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Clark'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\narray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Batman'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Property 'push' does not exist on type 'readonly number[]'.ts(2339)</span>\narray<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Property 'shift' does not exist on type 'readonly number[]'.ts(2339)</span>\n\narray<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\narray<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nС учетом погрешности на известные различия между массивом и кортежем, справедливо утверждать, что правила для </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">readonly</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> массива, справедливы и для </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">readonly</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> кортежа.\n\nПомимо того, что невозможно изменить или удалить слоты кортежа, он также теряет признаки массива, которые способны привести его к изменению.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">let</span> tuple<span class=\"token operator\">:</span> <span class=\"token keyword\">readonly</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Clark'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\ntuple<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'Wayne'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Cannot assign to '0' because it is a read-only property.ts(2540)</span>\n\ntuple<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Batman'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Property 'push' does not exist on type 'readonly [string, string]'.ts(2339)</span>\ntuple<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Property 'shift' does not exist on type 'readonly [string, string]'.ts(2339)</span>\n\ntuple<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Kent'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\ntuple<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nКроме того, механизм массивоподобных </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">readonly</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> структур, начиная с версии _TypeScript_ </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">4</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, повлиял на поведение такого расширенного типа, как </span><span class=\"token template-punctuation string\">`</span></span>Readonly<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.\n\nДо версии </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">4</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> поведение типа </span><span class=\"token template-punctuation string\">`</span></span>Readonly<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> полноценно распространялось только на объекты.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">// Ok, { readonly a: string, readonly b: number }</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">A</span></span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> b<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad, number[]</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">B</span></span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Bad, [string, boolean]</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">C</span></span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nНо начиная с версии </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">4</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> поведение для типа </span><span class=\"token template-punctuation string\">`</span></span>Readonly<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> дополняется поведением массивоподобных </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">readonly</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> структур.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">// Ok, { readonly a: string, readonly b: number }</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">A</span></span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> b<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Ok, readonly number[]</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">B</span></span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Ok, readonly [string, boolean]</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\"><span class=\"token constant\">C</span></span> <span class=\"token operator\">=</span> Readonly<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nНапоследок стоит упомянуть, что используя механизм массивоподобных </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">readonly</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> структур, по своей сути, компилятор расценивает эти структуры, как принадлежащие к интерфейсу добавленному в версии </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">4</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> </span><span class=\"token template-punctuation string\">`</span></span>ReadonlyArray<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span>`<span class=\"token punctuation\">,</span>речь о котором пойдет далее<span class=\"token punctuation\">.</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars.githubusercontent.com/u/31518738?v=4"}},{"committedDate":"2021-03-21T11:32:13Z","message":"fixed grammar and syntax errors in the text, corrected links","messageHeadline":"fixed grammar and syntax errors in the text, corrected links","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"mindyourlifeguide","bio":"Front-end developer","location":"Kyiv, Ukraine","avatarUrl":"https://avatars.githubusercontent.com/u/35348648?u=d52456eed154db660092623fe6e0ebb516677a95&v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.4/Массивоподобные readonly типы/content.md"},{"mmp":"3.4","id":"","version":"3.4","innovationName":"Расширенный тип ReadonlyArray","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Rasshirennyi_tip_ReadonlyArray","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"Rasshirennyi_tip_ReadonlyArray\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Расширенный тип ReadonlyArray</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Расширенный тип <code>ReadonlyArray&#x3C;T></code> предназначен для создания неизменяемых массивов. <code>ReadonlyArray&#x3C;T></code> запрещает изменять значения массива использую индексную сигнатуру <code>array[...]</code>.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> array<span class=\"token operator\">:</span> ReadonlyArray<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narray<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Index signature in type 'readonly number[]' only permits reading.ts(2542)</span>\narray<span class=\"token punctuation\">[</span>array<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Index signature in type 'readonly number[]' only permits reading.ts(2542)</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nКроме того, тип </span><span class=\"token template-punctuation string\">`</span></span>ReadonlyArray<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> не содержит методы, способные изменить, удалить существующие или добавить новые элементы.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">let</span> array<span class=\"token operator\">:</span> ReadonlyArray<span class=\"token operator\">&lt;</span><span class=\"token builtin\">number</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\narray<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Property 'push' does not exist on type 'readonly number[]'.ts(2339)</span>\narray<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Property 'shift' does not exist on type 'readonly number[]'.ts(2339)</span>\n\narray<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars.githubusercontent.com/u/31518738?v=4"}},{"committedDate":"2021-03-21T11:32:13Z","message":"fixed grammar and syntax errors in the text, corrected links","messageHeadline":"fixed grammar and syntax errors in the text, corrected links","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"mindyourlifeguide","bio":"Front-end developer","location":"Kyiv, Ukraine","avatarUrl":"https://avatars.githubusercontent.com/u/35348648?u=d52456eed154db660092623fe6e0ebb516677a95&v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.4/Расширенный тип ReadonlyArray/content.md"},{"mmp":"3.4","id":"","version":"3.4","innovationName":"Привидение к константе (const assertion)","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Prividenie_k_konstante_(const_assertion)","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"Prividenie_k_konstante_(const_assertion)\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Привидение к константе (const assertion)</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Ни для кого не секрет, что с точки зрения <em>JavaScript</em>, а следовательно и <em>TypeScript</em>, все примитивные литеральные значения являются константными значениями. С точки зрения среды исполнения два эквивалентных литерала любого литерального типа являются единым значением. То есть, среда исполнения расценивает два строковых литерала <code>'text'</code> и <code>'text'</code>, как один литерал. То же самое справедливо и для остальных литералов к которым помимо типа <code>string</code> также относятся такие типы, как <code>number</code>, <code>boolean</code> и <code>symbol</code>.</p>\n<p class=\"content__paragraph\">Тем не менее, сложно найти разработчика <em>TypeScript</em>, который при объявлении каких-либо конструкций, которым предстоит проверка на принадлежность к литеральному типу, не испытывал дискомфорта из-за вывода типов.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Status</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span> <span class=\"token operator\">|</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Request</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> Status <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> status <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> request<span class=\"token operator\">:</span> Request <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error, Type 'number' is not assignable to type 'Status'.ts(2322)</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nВ коде выше ошибка возникает по причине того, что вывод типов определяет принадлежность значения переменной </span><span class=\"token template-punctuation string\">`</span></span>status<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> к типу </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token builtin\">number</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, а не литеральному числовому типу </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token number\">200</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">// вывод типов видит как</span>\n<span class=\"token keyword\">let</span> status<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// в, то время как требуется так</span>\n<span class=\"token keyword\">let</span> status<span class=\"token operator\">:</span> <span class=\"token number\">200</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nДо версии _TypeScript_ </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">4</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> без явного указания типа или явного приведения к нему, существовал только один выход из сложившейся, в коде выше, ситуации. Он заключался в утверждении типа, с помощью оператора </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">as</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> либо угловых скобок </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, непосредственно самого значения нуждающегося в этом.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Status</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span> <span class=\"token operator\">|</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Request</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> Status <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> status <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// утверждаем компилятору..</span>\n<span class=\"token keyword\">let</span> request<span class=\"token operator\">:</span> Request <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> status <span class=\"token keyword\">as</span> <span class=\"token number\">200</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// …с помощью as оператора</span>\n<span class=\"token keyword\">let</span> request<span class=\"token operator\">:</span> Request <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token number\">200</span><span class=\"token operator\">></span>status <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// …с помощью угловых скобок</span>\n<span class=\"token comment\">// …, что должен рассматривать значение ассоциированное со 'status', как значение принадлежащие к литеральному типу 'Status'</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\n_TypeScript_, начиная с версии </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">4</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, вводит такое понятие, как </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">const</span> assertion<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> (утверждение к константе или константное утверждение).\n\nКонстантное утверждение это такое утверждение объявление которого производится с помощью оператора </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">as</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> либо угловых скобок </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Status</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span> <span class=\"token operator\">|</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">Request</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> Status <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> status <span class=\"token operator\">=</span> <span class=\"token number\">200</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> request<span class=\"token operator\">:</span> Request <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> status <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\n<span class=\"token keyword\">let</span> request<span class=\"token operator\">:</span> Request <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span><span class=\"token operator\">></span>status <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nПо причине того, что компилятор получает инструкции заставляющие его расценивать значение как константное, вывод типов определяет его принадлежность к литеральному типу.\n\nУтверждение к константе заставляет вывод типов определять принадлежность массива к типу </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">readonly</span> tuple<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">404</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let a: number[]</span>\n\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">404</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let b: readonly [200, 404]</span>\n<span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">404</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let c: readonly [200, 404]</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nВ случае с объектным типом, утверждение к константе рекурсивно помечает все его поля как </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">readonly</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">. Кроме того, все его поля принадлежащие к примитивным типам расцениваются как литеральные типы.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">NotConstResponseType</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    status<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        role<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">type</span> <span class=\"token class-name\">ConstResponseType</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    status<span class=\"token operator\">:</span> <span class=\"token number\">200</span> <span class=\"token operator\">|</span> <span class=\"token number\">404</span><span class=\"token punctuation\">;</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        role<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'admin'</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> role<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// NotConstResponseType</span>\n\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> role<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ConstResponseType</span>\n<span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span> status<span class=\"token operator\">:</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> role<span class=\"token operator\">:</span> <span class=\"token string\">'user'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ConstResponseType</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nНо стоит помнить, что утверждение к константе, применимо исключительно к литералам </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token builtin\">number</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token builtin\">string</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token builtin\">boolean</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, </span><span class=\"token template-punctuation string\">`</span></span>array<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> и </span><span class=\"token template-punctuation string\">`</span></span>object<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token string\">'value'</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok - 'value' является литералом, let a: \"value\"</span>\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token number\">100</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok - 100 является литералом, let b: 100</span>\n<span class=\"token keyword\">let</span> c <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok - true является литералом, let c: true</span>\n\n<span class=\"token keyword\">let</span> d <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok - [] является литералом, let d: readonly []</span>\n<span class=\"token keyword\">let</span> e <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok - {} является литералом, let e: {readonly f: 100;}</span>\n\n<span class=\"token keyword\">let</span> value <span class=\"token operator\">=</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let array: number[]</span>\n<span class=\"token keyword\">let</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let object: {f: number;}</span>\n\n<span class=\"token keyword\">let</span> f <span class=\"token operator\">=</span> value <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error - value это ссылка идентификатор хранящий литерал</span>\n<span class=\"token keyword\">let</span> g <span class=\"token operator\">=</span> array <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error - array это ссылка на идентификатор хранящий ссылку на объект массива</span>\n<span class=\"token keyword\">let</span> h <span class=\"token operator\">=</span> object <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error - object это ссылка идентификатор хранящий ссылку на объект объекта</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nНо, кроме того, все три рассмотренных случая утверждения к константе (примитивных, массивов и объектных типов) может создать впечатление, что в _TypeScript_, наконец, появились структуры, которые справедливо назвать теми самыми, неизменяемыми ни при каких условиях, константами. И это действительно так, но лишь от части. Дело в том, что на момент версии _TypeScript_ </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">4</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> принадлежность объектных и массивоподобных типов к константе зависит от значения с которыми они ассоциированы.\n\nВ случае, когда литералы ссылочных типов (массивы и объекты) ассоциированы при помощи агрегационных отношений со значением также принадлежащим к ссылочному типу, то они представляются такими, какими были на момент ассоциации. Кроме того, поведение механизма приведения к константе зависит от другого механизма – деструктуризации.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token keyword\">let</span> defaultObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let defaultObject: {f: number;}</span>\n<span class=\"token keyword\">let</span> constObject <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let constObject: {readonly f: 100;}</span>\n\n<span class=\"token keyword\">let</span> defaultArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let defaultArray: number[]</span>\n<span class=\"token keyword\">let</span> constArray <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let constArray: readonly [0, 1, 2]</span>\n\n<span class=\"token comment\">// неожиданно - o0.f не имеет модификатора readonly! Однако ожидаемо, что o0.f.f иммутабельный (неизменяемый) объект</span>\n<span class=\"token keyword\">let</span> o0 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token number\">100</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {f: {readonly f: 100;};}</span>\n<span class=\"token comment\">// ожидаемо - o1.f имеет модификатор readonly. Вполне ожидаемо: o1.f.f мутабельный (изменяемый) объект</span>\n<span class=\"token keyword\">let</span> o1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> defaultObject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {readonly f: {f: number;};}</span>\n<span class=\"token comment\">// ожидаемо - o2 иммутабельный (неизменяемый) объект</span>\n<span class=\"token keyword\">let</span> o2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>defaultObject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {readonly f: number;}</span>\n<span class=\"token comment\">// неожиданно - o3.f не имеет модификатора readonly. ожидаемо- o3.f.f иммутабельный (неизменяемый) объект</span>\n<span class=\"token keyword\">let</span> o3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>defaultObject <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {f: {readonly f: number;};}</span>\n\n<span class=\"token comment\">// ожидаемо - o4.f и o4.f.f иммутабельные (неизменяемые) объекты</span>\n<span class=\"token keyword\">let</span> o4 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> constObject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let o4: {readonly f: {readonly f: 100;};}</span>\n<span class=\"token comment\">// ожидаемо - o5 иммутабельный (неизменяемый)  объект</span>\n<span class=\"token keyword\">let</span> o5 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>constObject <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let o5: {readonly f: 100;}</span>\n<span class=\"token comment\">// неожиданно - o6.f не имеет модификатора readonly. ожидаемо- o6.f.f иммутабельный (неизменяемый) объект</span>\n<span class=\"token keyword\">let</span> o6 <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> f<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>constObject <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// {f: {readonly f: 100;};}</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`\n\nПо причине того<span class=\"token punctuation\">,</span> что не <span class=\"token function\">примитивные</span> <span class=\"token punctuation\">(</span>объектные<span class=\"token punctuation\">)</span> типы данных<span class=\"token punctuation\">,</span> хранящиеся в массиве<span class=\"token punctuation\">,</span> подчиняются правилам описанным выше<span class=\"token punctuation\">,</span> подробное рассмотрение процесса утверждения массива к константе будет опущено<span class=\"token punctuation\">.</span>\n\nИ последнее о чем стоит упомянуть<span class=\"token punctuation\">,</span> утверждение к константе применимо только к простым выражениям<span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> _ <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'yes'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'no'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> _ <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">'yes'</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span> <span class=\"token operator\">:</span> <span class=\"token string\">'no'</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok, let b: \"yes\" | \"no\"</span></code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars.githubusercontent.com/u/31518738?v=4"}},{"committedDate":"2021-03-22T08:08:33Z","message":"fixed grammar and syntax errors in the text","messageHeadline":"fixed grammar and syntax errors in the text","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"mindyourlifeguide","bio":"Front-end developer","location":"Kyiv, Ukraine","avatarUrl":"https://avatars.githubusercontent.com/u/35348648?u=d52456eed154db660092623fe6e0ebb516677a95&v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.4/Привидение к константе \\(const assertion\\)/content.md"},{"mmp":"3.4","id":"","version":"3.4","innovationName":"Проверка типов для globalThis","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Proverka_tipov_dlya_globalThis","html":"<h2 class=\"content__heading_2\">\n    <button class=\"content__button_copy-to-buffer\" path=\"Proverka_tipov_dlya_globalThis\">\n      <svg class=\"svg-icon copy-to-buffer-button__svg-icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n        <use xlink:href=\"#iconmonstr-link\"></use>\n      </svg>\n      <div class=\"content__tooltip_copy-to-buffer tooltip\">\n        Скопировать ссылку в буффер обмена\n      </div>\n    </button>\n  <span>Проверка типов для globalThis</span></h2>\n<div class=\"content__tag-bar\"></div>\n<p class=\"content__paragraph\">Поскольку реализация глобальной области зависит от конкретной платформы, доступ к ней, соответственно, отличается. В браузере, доступ к глобальному объекту осуществляется при помощи ссылки <code>window</code>, в, то время как в <code>nodejs</code> туже роль исполняет ссылка <code>global</code>.</p>\n<p class=\"content__paragraph\">Для упрощения работы с глобальным объектом, в <em>ECMAScript10</em> было предложено стандартизировать имя идентификатора ссылающего на него. Так в <em>ES2019</em> появилось новое глобальное свойство <code>globalThis</code>, которое предоставляет доступ к глобальному объекту независимо от платформы.</p>\n<p class=\"content__paragraph\">Начиная с версии <code>v3.4</code> в <em>TypeScript</em> также было представлено новое свойство <code>globalThis</code>, и, кроме того, компилятор <code>tsc</code> получил поддержку проверки типов для полей объявленных в глобальном модуле. Помимо того, что объявленные в глобальном контексте члены, получили поддержку вывода типов, благодаря этому механизму, современные <em>ide</em> стали предоставлять разработчикам механизм умного автокомплита из нового глобального модуля.</p>\n<div class=\"content__code\">\n    <div class=\"content__code-panel_top content__code-panel_lang_ts\">\n        <span class=\"content_code-label_filepath\"></span>\n        <span class=\"content_code-label_lang\">ts</span>\n    </div>\n    <div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">// где-то в глобальном файле</span>\n<span class=\"token keyword\">let</span> globalValue <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">GLOBAL_VALUE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'100'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// где-то в приложении</span>\n<span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> globalValue<span class=\"token punctuation\">;</span> <span class=\"token comment\">// let a: number</span>\n<span class=\"token keyword\">let</span> b <span class=\"token operator\">=</span> <span class=\"token constant\">GLOBAL_VALUE</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// let b: string</span>\n\nglobalThis<span class=\"token punctuation\">.</span>globalValue <span class=\"token operator\">=</span> <span class=\"token number\">101</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\nglobalThis<span class=\"token punctuation\">.</span><span class=\"token constant\">GLOBAL_VALUE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'101'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n\nВажным моментом является то, что _TypeScript_ не преобразует свойство </span><span class=\"token template-punctuation string\">`</span></span>globalThis<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> при компиляции в более старые версии _ECMAScript_.\n\nПомимо этого, введение текущего функционала привело к изменению поведения предыдущих компиляторов. Если до версии </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">4</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\"> допускалось объявлять члены в глобальном объекте с помощью ссылки </span><span class=\"token template-punctuation string\">`</span></span><span class=\"token keyword\">this</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, то начиная с версии </span><span class=\"token template-punctuation string\">`</span></span>v3<span class=\"token punctuation\">.</span><span class=\"token number\">4</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">, такой код вызывает ошибку.\n\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>ts\n<span class=\"token comment\">// до версии 3.4</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\nglobalThis<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\n\n<span class=\"token comment\">// начиная с версии 3.4</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Error</span>\nglobalThis<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token string\">'value'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Ok</span>\n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n    <div class=\"content__code-panel_bottom content__code-panel_lang_ts\"></div>\n</div>","commitInfoAll":[{"committedDate":"2020-09-08T11:53:53Z","message":"book(технические изменения (link, md, т.п.)): change code wrapper\n\nchange code wrapper from ~ to ` and from typescript to ts","messageHeadline":"book(технические изменения (link, md, т.п.)): change code wrapper","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"nauchikus","bio":"@TechnoFanatic(\"🍬\")\r\n","location":null,"avatarUrl":"https://avatars.githubusercontent.com/u/31518738?v=4"}},{"committedDate":"2021-03-22T08:08:33Z","message":"fixed grammar and syntax errors in the text","messageHeadline":"fixed grammar and syntax errors in the text","pushedDate":null,"authoredByCommitter":true,"committer":{"name":"mindyourlifeguide","bio":"Front-end developer","location":"Kyiv, Ukraine","avatarUrl":"https://avatars.githubusercontent.com/u/35348648?u=d52456eed154db660092623fe6e0ebb516677a95&v=4"}}],"fileOnGithubLink":"https://github.com/nauchikus/typescript-definitive-guide/blob/what-is-new/3.4/Проверка типов для globalThis/content.md"}]},"winTocTree":[{"id":"0","isCollapse":false,"index":0,"data":{"releaseHistory":[{"version":"3.3","dateRelease":"january 31, 2019","datePublication":"January 31, 2019"}],"mmp":"3.3","innovations":[{"id":"","version":"3.3","innovationName":"Повышение производительности сборки для команды --build --watch","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"Povyshenie_proizvoditelnosti_sborki_dlya_komandy_--build_--watch"},{"id":"","version":"3.3","innovationName":"Улучшение поведения для типов Union указанных в качестве параметров функции","dateRelease":"January 31, 2019","datePublication":"January 31, 2019","tags":[],"path":"Uluchshenie_povedeniya_dlya_tipov_Union_ukazannyh_v_kachestve_parametrov_funkcii"}]}},{"id":"1","isCollapse":false,"index":1,"data":{"releaseHistory":[{"version":"3.4","dateRelease":"March 29, 2019","datePublication":"March 29, 2019"}],"mmp":"3.4","innovations":[{"id":"","version":"3.4","innovationName":"Опции компилятора --tsBuildInfoFile","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Opcii_kompilyatora_--tsBuildInfoFile"},{"id":"","version":"3.4","innovationName":"Опции компилятора --incremental","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Opcii_kompilyatora_--incremental"},{"id":"","version":"3.4","innovationName":"Массивоподобные readonly типы","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Massivopodobnye_readonly_tipy"},{"id":"","version":"3.4","innovationName":"Расширенный тип ReadonlyArray","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Rasshirennyi_tip_ReadonlyArray"},{"id":"","version":"3.4","innovationName":"Привидение к константе (const assertion)","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Prividenie_k_konstante_(const_assertion)"},{"id":"","version":"3.4","innovationName":"Проверка типов для globalThis","dateRelease":"March 29, 2019","datePublication":"March 29, 2019","tags":[],"path":"Proverka_tipov_dlya_globalThis"}]}},{"id":"2","isCollapse":false,"index":2,"data":{"releaseHistory":[{"version":"3.5","dateRelease":"May 29, 2019","datePublication":"May 29, 2019"}],"mmp":"3.5","innovations":[{"id":"","version":"3.5","innovationName":"Вспомогательный тип Omit","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Vspomogatelnyi_tip_Omit"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки избыточных полей в объединённых типах (Union types)","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Uluchshenie_mehanizma_proverki_izbytochnyh_polei_v_obedinennyh_tipah_(Union_types)"},{"id":"","version":"3.5","innovationName":"Введение нового флага --allowUmdGlobalAccess","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Vvedenie_novogo_flaga_--allowUmdGlobalAccess"},{"id":"","version":"3.5","innovationName":"Улучшение механизма проверки объединенных типов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Uluchshenie_mehanizma_proverki_obedinennyh_tipov"},{"id":"","version":"3.5","innovationName":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Uluchshenie_mehanizma_vyvoda_tipa_vysshego_poryadka_dlya_obobshchennyh_konstruktorov"},{"id":"","version":"3.5","innovationName":"Неявное ограничение обобщенных параметров типом unknown","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Neyavnoe_ogranichenie_obobshchennyh_parametrov_tipom_unknown"},{"id":"","version":"3.5","innovationName":"Изменение правил для типа unknown и индексной сигнатуре","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Izmenenie_pravil_dlya_tipa_unknown_i_indeksnoi_signature"},{"id":"","version":"3.5","innovationName":"Изменение логики для Object.keys для версии es5","dateRelease":"May 29, 2019","datePublication":"May 29, 2019","tags":[],"path":"Izmenenie_logiki_dlya_Object.keys_dlya_versii_es5"}]}},{"id":"3","isCollapse":false,"index":3,"data":{"releaseHistory":[{"version":"3.6","dateRelease":"August 28, 2019","datePublication":"August 28, 2019"}],"mmp":"3.6","innovations":[{"id":"","version":"3.6","innovationName":"Повышение типобезопасности генераторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Povyshenie_tipobezopasnosti_generatorov"},{"id":"","version":"3.6","innovationName":"Добавление хелпера имитирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Dobavlenie_helpera_imitiruushchego_mehanizm_spread_array_pri_kompilyacii_v_ecmascript_nije_versii_6_pri_neaktivnom_flage_--downlevelIteration"},{"id":"","version":"3.6","innovationName":"Расширение системы типов типами представляющими структуры данных только для чтения","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Rasshirenie_sistemy_tipov_tipami_predstavlyaushchimi_struktury_dannyh_tolko_dlya_chteniya"},{"id":"","version":"3.6","innovationName":"Строковой идентификатор функции-конструктора","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Strokovoi_identifikator_funkcii-konstruktora"},{"id":"","version":"3.6","innovationName":"Расширение вывода об ошибках при работе с Promise","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Rasshirenie_vyvoda_ob_oshibkah_pri_rabote_s_Promise"},{"id":"","version":"3.6","innovationName":"Слияние одноименных классов и функций из окружающего контекста","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Sliyanie_odnoimennyh_klassov_i_funkcii_iz_okrujaushchego_konteksta"},{"id":"","version":"3.6","innovationName":"Добавлена поддержка Unicode для идентификаторов","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Dobavlena_podderjka_Unicode_dlya_identifikatorov"},{"id":"","version":"3.6","innovationName":"Поддержка import.meta для SystemJS","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Podderjka_import.meta_dlya_SystemJS"},{"id":"","version":"3.6","innovationName":"get и set в окружающем контексте","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"get_i_set_v_okrujaushchem_kontekste"},{"id":"","version":"3.6","innovationName":"Api для поддержки --build и --incremental","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Api_dlya_podderjki_--build_i_--incremental"},{"id":"","version":"3.6","innovationName":"Интеллектуальное определение синтаксиса авто-импорта","dateRelease":"August 28, 2019","datePublication":"August 28, 2019","tags":[],"path":"Intellektualnoe_opredelenie_sintaksisa_avto-importa"}]}},{"id":"4","isCollapse":false,"index":4,"data":{"releaseHistory":[{"version":"3.7","dateRelease":"November 5, 2019","datePublication":"November 5, 2019"},{"version":"3.7-rc","dateRelease":"November 4, 2019","datePublication":"November 5, 2019"},{"version":"3.7-beta","dateRelease":"November 3, 2019","datePublication":"November 5, 2019"},{"version":"3.7-alpha","dateRelease":"November 2, 2019","datePublication":"November 5, 2019"}],"mmp":"3.7","innovations":[{"id":"","version":"3.7-rc","innovationName":"Оператор опциональной последовательности (?.)","dateRelease":"November 4, 2019","datePublication":"November 5, 2019","tags":["исправление","Критическое изменение","Компилятор"],"path":"Operator_opcionalnoi_posledovatelnosti_(?.)"},{"id":"","version":"3.7-rc","innovationName":"Оператор объединения со значением null (??)","dateRelease":"November 4, 2019","datePublication":"November 5, 2019","tags":["высокая ожидаемость"],"path":"Operator_obedineniya_so_znacheniem_null_(??)"},{"id":"","version":"3.7-rc","innovationName":"Утверждение в сигнатуре (Signature Assertion)","dateRelease":"November 4, 2019","datePublication":"November 5, 2019","tags":["важно"],"path":"Utverjdenie_v_signature_(Signature_Assertion)"},{"id":"","version":"3.7-rc","innovationName":"Улучшена поддержка для типа never возвращаемого из функций","dateRelease":"November 4, 2019","datePublication":"November 5, 2019","tags":["изменение"],"path":"Uluchshena_podderjka_dlya_tipa_never_vozvrashchaemogo_iz_funkcii"},{"id":"","version":"3.7-beta","innovationName":"Проверка не вызванных функций","dateRelease":"November 3, 2019","datePublication":"November 5, 2019","tags":["баг"],"path":"Proverka_ne_vyzvannyh_funkcii"},{"id":"","version":"3.7-beta","innovationName":"Рекурсивность для псевдонимов типов","dateRelease":"November 3, 2019","datePublication":"November 5, 2019","tags":["компилятор"],"path":"Rekursivnost_dlya_psevdonimov_tipov"},{"id":"","version":"3.7-alpha","innovationName":"Совместное использование флагов --declaration и --allowJs","dateRelease":"November 2, 2019","datePublication":"November 5, 2019","tags":["директивы"],"path":"Sovmestnoe_ispolzovanie_flagov_--declaration_i_--allowJs"},{"id":"","version":"3.7-alpha","innovationName":"@ts-nocheck в TypeScript файлах","dateRelease":"November 2, 2019","datePublication":"November 5, 2019","tags":["общее"],"path":"@ts-nocheck_v_TypeScript_failah"}]}},{"id":"5","isCollapse":false,"index":5,"data":{"releaseHistory":[{"version":"3.8","dateRelease":"February 20, 2020","datePublication":"February 20, 2020"}],"mmp":"3.8","innovations":[{"id":"","version":"3.8","innovationName":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Import_i_eksport_tolko_tipa_i_flag_--importsNotUsedAsValues"},{"id":"","version":"3.8","innovationName":"Закрытые поля ECMAScript","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Zakrytye_polya_ECMAScript"},{"id":"","version":"3.8","innovationName":"await высшего уровня","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"await_vysshego_urovnya"},{"id":"","version":"3.8","innovationName":"Реализация новой формы ре-экспорта","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Realizaciya_novoi_formy_re-eksporta"},{"id":"","version":"3.8","innovationName":"Новая конфигурационная группа параметров watchOptions","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Novaya_konfiguracionnaya_gruppa_parametrov_watchOptions"},{"id":"","version":"3.8","innovationName":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Novyi_flag_--assumeChangesOnlyAffectDirectDependencies"},{"id":"","version":"3.8","innovationName":"Модификаторы JSDocs","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"Modifikatory_JSDocs"},{"id":"","version":"3.8","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Bolee_strogie_proverki_obedinenii_imeushchih_s_indeksnoi_signaturoi"},{"id":"","version":"3.8","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","dateRelease":"February 20, 2020","datePublication":"February 20, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Tip_object_v_JSDoc_pri_aktivnom_flage_--noImplicitAny_bolshe_ne_rascenivaetsya_kak_any"}]}},{"id":"6","isCollapse":false,"index":6,"data":{"releaseHistory":[{"version":"3.9","dateRelease":"May 12, 2020","datePublication":"May 12, 2020"}],"mmp":"3.9","innovations":[{"id":"","version":"3.9","innovationName":"Улучшение вывода типа для Promise.all","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"Uluchshenie_vyvoda_tipa_dlya_Promise.all"},{"id":"","version":"3.9","innovationName":"Сокращение скорости компиляции","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"Sokrashchenie_skorosti_kompilyacii"},{"id":"","version":"3.9","innovationName":"Комментарная директива @ts-expect-error","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"Kommentarnaya_direktiva_@ts-expect-error"},{"id":"","version":"3.9","innovationName":"Проверка вызова функции в тернарном условном операторе","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"Proverka_vyzova_funkcii_v_ternarnom_uslovnom_operatore"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Izmenenie_povedeniya_dlya_operatora_Non-Null_pri_sovmestnom_ispolzovanii_s_operatorom_opcionalnoi_cepochki"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Vozniknovenie_oshibki_pri_nalichii_v_stroke_zakryvaushchei_figurnoi_ili_uglovatoi_skobki_v_failah_s_rasshireniem_TSX"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Povyshenie_urovnya_proverki_neobyazatelnyh_polei_dlya_tipov_opredelyaushchih_tip_peresechenie"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дискриминантными полями","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Opredelenie_tipa_peresecheniya_diskriminantnymi_polyami"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Parametr_tipa_rasshiryaushchii_tip_any_bolshe_ne_nasleduet_ego_harakteristiki"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_get_i_set_bolshe_ne_perechislyaemy"},{"id":"","version":"3.9","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","dateRelease":"May 12, 2020","datePublication":"May 12, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_export_*_teper_vsegda_vkluchaetsya_v_sborku"}]}},{"id":"7","isCollapse":false,"index":7,"data":{"releaseHistory":[{"version":"4.0","dateRelease":"August 20, 2020","datePublication":"August 20, 2020"}],"mmp":"4.0","innovations":[{"id":"","version":"4.0","innovationName":"Вариативный кортеж","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Variativnyi_kortej"},{"id":"","version":"4.0","innovationName":"Помеченные элементы кортежа","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Pomechennye_elementy_korteja"},{"id":"","version":"4.0","innovationName":"Операторы присваивания короткого замыкания","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Operatory_prisvaivaniya_korotkogo_zamykaniya"},{"id":"","version":"4.0","innovationName":"Вывод типов для полей класса по параметрам конструктора","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Vyvod_tipov_dlya_polei_klassa_po_parametram_konstruktora"},{"id":"","version":"4.0","innovationName":"unknown как тип исключения блока catch","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"unknown_kak_tip_isklucheniya_bloka_catch"},{"id":"","version":"4.0","innovationName":"--noEmit совмещенный с --incremental","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"--noEmit_sovmeshchennyi_s_--incremental"},{"id":"","version":"4.0","innovationName":"Пользовательская фабрика jsx фрагментов","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Polzovatelskaya_fabrika_jsx_fragmentov"},{"id":"","version":"4.0","innovationName":"Добавление комментарной директивы @deprecated","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"Dobavlenie_kommentarnoi_direktivy_@deprecated"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение lib.d.ts","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Izmenenie_lib.d.ts"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Переопределение аксессоров полем и наоборот теперь является ошибкой","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Pereopredelenie_aksessorov_polem_i_naoborot_teper_yavlyaetsya_oshibkoi"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Операнды для delete должны быть необязательными","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Operandy_dlya_delete_doljny_byt_neobyazatelnymi"},{"id":"","version":"4.0","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение фабричного api Nodejs","dateRelease":"August 20, 2020","datePublication":"August 20, 2020","tags":[],"path":"[KRITIChESKOE_IZMENENIE]_Izmenenie_fabrichnogo_api_Nodejs"}]}},{"id":"8","isCollapse":false,"index":8,"data":{"releaseHistory":[{"version":"4.1@beta","dateRelease":"September 18, 2020","datePublication":"September 18, 2020"},{"version":"4.1@beta_1","dateRelease":"September 18, 2020","datePublication":"October 08, 2020"}],"colors":{"bookCoverColors":{"--color_light":"#fff","--color_middle-lite":"#93cf94","--color_accent":"#aff933","--color_ambient":"#a12d2d"},"bookUpdateCurrentVersionCoverColors":{"--color":"#265589"}},"mmp":"4.1","innovations":[{"id":"","version":"4.1@beta_1","innovationName":"Изменение механизма проверки индексной сигнатуры","dateRelease":"September 18, 2020","datePublication":"October 08, 2020","tags":["Нововведение"],"path":"Izmenenie_mehanizma_proverki_indeksnoi_signatury"},{"id":"","version":"4.1@beta","innovationName":"Шаблонный литеральный строковый тип","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Нововведение"],"path":"Shablonnyi_literalnyi_strokovyi_tip"},{"id":"","version":"4.1@beta","innovationName":"Переопределение ключей в сопоставленных типах","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Нововведение"],"path":"Pereopredelenie_kluchei_v_sopostavlennyh_tipah"},{"id":"","version":"4.1@beta","innovationName":"Рекурсивные условные типы","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"Rekursivnye_uslovnye_tipy"},{"id":"","version":"4.1@beta","innovationName":"paths без baseUrl","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"paths_bez_baseUrl"},{"id":"","version":"4.1@beta","innovationName":"checkJs не требует активации allowJs","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"checkJs_ne_trebuet_aktivacii_allowJs"},{"id":"","version":"4.1@beta","innovationName":"jsx фабрики для React 17","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"jsx_fabriki_dlya_React_17"},{"id":"","version":"4.1@beta","innovationName":"Поддержка тега @see для JSDoc","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Изменение"],"path":"Podderjka_tega_@see_dlya_JSDoc"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] abstract больше не совместим с async","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_abstract_bolshe_ne_sovmestim_s_async"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] any и unknown доминируют в ложных позициях","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_any_i_unknown_dominiruut_v_lojnyh_poziciyah"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] --declaration и --outFile требуют имя корневого пакета","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_--declaration_i_--outFile_trebuut_imya_kornevogo_paketa"},{"id":"","version":"4.1@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] параметры resolve теперь обязательные","dateRelease":"September 18, 2020","datePublication":"September 18, 2020","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_parametry_resolve_teper_obyazatelnye"}]}},{"id":"9","isCollapse":false,"index":9,"data":{"releaseHistory":[{"version":"4.2","dateRelease":"February 23, 2021","datePublication":"March 4, 2021"}],"colors":{"bookCoverColors":{"--color_light":"#fff","--color_middle-lite":"#93cf94","--color_accent":"#aff933","--color_ambient":"#a12d2d"},"bookUpdateCurrentVersionCoverColors":{"--color":"#265589"}},"mmp":"4.2","innovations":[{"id":"","version":"4.2","innovationName":"Изменение поведения указания остаточных типов в кортеже","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Изменение"],"path":"Izmenenie_povedeniya_ukazaniya_ostatochnyh_tipov_v_korteje"},{"id":"","version":"4.2","innovationName":"Изменение вывода для псевдонимов типов","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Улучшение"],"path":"Izmenenie_vyvoda_dlya_psevdonimov_tipov"},{"id":"","version":"4.2","innovationName":"Ужесточение правил проверки для in-оператора","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Нововведение"],"path":"Ujestochenie_pravil_proverki_dlya_in-operatora"},{"id":"","version":"4.2","innovationName":"Новый флаг --noPropertyAccessFromIndexSignature","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Нововведение"],"path":"Novyi_flag_--noPropertyAccessFromIndexSignature"},{"id":"","version":"4.2","innovationName":"Модификатор abstract для описания типа конструктора","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Нововведение"],"path":"Modifikator_abstract_dlya_opisaniya_tipa_konstruktora"},{"id":"","version":"4.2","innovationName":"Понимание структуры проекта с флагом --explainFiles","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Нововведение"],"path":"Ponimanie_struktury_proekta_s_flagom_--explainFiles"},{"id":"","version":"4.2","innovationName":"Проверка вызова функций в логических выражениях","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Улучшение"],"path":"Proverka_vyzova_funkcii_v_logicheskih_vyrajeniyah"},{"id":"","version":"4.2","innovationName":"Смягчение правил между необязательными членами и строковых индексных сигнатур","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Изменение"],"path":"Smyagchenie_pravil_mejdu_neobyazatelnymi_chlenami_i_strokovyh_indeksnyh_signatur"},{"id":"","version":"4.2","innovationName":"Деструктурированные переменные можно явно пометить как неиспользуемые","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Нововведение"],"path":"Destrukturirovannye_peremennye_mojno_yavno_pometit_kak_neispolzuemye"},{"id":"","version":"4.2","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Обновление lib.d.ts","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_Obnovlenie_lib.d.ts"},{"id":"","version":"4.2","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] noImplicitAny и новое поведение для оператора yield тип которого не может быть установлен явно","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_noImplicitAny_i_novoe_povedenie_dlya_operatora_yield_tip_kotorogo_ne_mojet_byt_ustanovlen_yavno"},{"id":"","version":"4.2","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Проверка вызова функций в условных операторах приурочена к флагу --strictNullChecks","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_Proverka_vyzova_funkcii_v_uslovnyh_operatorah_priurochena_k_flagu_--strictNullChecks"},{"id":"","version":"4.2","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Лимит для механизма spread в кортежах","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_Limit_dlya_mehanizma_spread_v_kortejah"},{"id":"","version":"4.2","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение правил для оператора in","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_Izmenenie_pravil_dlya_operatora_in"},{"id":"","version":"4.2","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Расширение .d.ts теперь нельзя использовать в путях импорта","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_Rasshirenie_.d.ts_teper_nelzya_ispolzovat_v_putyah_importa"},{"id":"","version":"4.2","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение типа параметра функции обратного вызова передаваемой в качестве аргумента функции visitNode","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_Izmenenie_tipa_parametra_funkcii_obratnogo_vyzova_peredavaemoi_v_kachestve_argumenta_funkcii_visitNode"},{"id":"","version":"4.2","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Отмена поведения литерального вывода шаблона из версии 4.2@beta","dateRelease":"February 23, 2021","datePublication":"March 4, 2021","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_Otmena_povedeniya_literalnogo_vyvoda_shablona_iz_versii_4.2@beta"}]}},{"id":"10","isCollapse":false,"index":10,"data":{"releaseHistory":[{"version":"4.3@beta","dateRelease":"April 1, 2021","datePublication":"April 6, 2021"}],"colors":{"bookCoverColors":{"--color_light":"#fff","--color_middle-lite":"#c93737","--color_accent":"#e6e63a","--color_ambient":"#ff9443"},"bookUpdateCurrentVersionCoverColors":{"--color":"#265589"}},"mmp":"4.3","innovations":[{"id":"","version":"4.3@beta","innovationName":"Отдельные типы аксеcсоров","dateRelease":"April 1, 2021","datePublication":"April 6, 2021","tags":["Улучшение"],"path":"Otdelnye_tipy_aksecsorov"},{"id":"","version":"4.3@beta","innovationName":"Модификатор override и флаг --noImplicitOverride","dateRelease":"April 1, 2021","datePublication":"April 6, 2021","tags":["Нововведение"],"path":"Modifikator_override_i_flag_--noImplicitOverride"},{"id":"","version":"4.3@beta","innovationName":"Улучшение работы шаблонного строкового типа","dateRelease":"April 1, 2021","datePublication":"April 6, 2021","tags":["Улучшение"],"path":"Uluchshenie_raboty_shablonnogo_strokovogo_tipa"},{"id":"","version":"4.3@beta","innovationName":"Изменение поведения для объекта Promise в условных выражениях","dateRelease":"April 1, 2021","datePublication":"April 6, 2021","tags":["Изменение"],"path":"Izmenenie_povedeniya_dlya_obekta_Promise_v_uslovnyh_vyrajeniyah"},{"id":"","version":"4.3@beta","innovationName":"Индексные сигнатуры класса","dateRelease":"April 1, 2021","datePublication":"April 6, 2021","tags":["Улучшение"],"path":"Indeksnye_signatury_klassa"},{"id":"","version":"4.3@beta","innovationName":"Расширение возможностей ECMAScript приватного модификатора и флаг --useDefineForClassFields","dateRelease":"April 1, 2021","datePublication":"April 6, 2021","tags":["Улучшение"],"path":"Rasshirenie_vozmojnostei_ECMAScript_privatnogo_modifikatora_i_flag_--useDefineForClassFields"},{"id":"","version":"4.3@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменения в lib.d.ts","dateRelease":"April 1, 2021","datePublication":"April 6, 2021","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_Izmeneniya_v_lib.d.ts"},{"id":"","version":"4.3@beta","innovationName":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Enum больше нельзя сравнивать с произвольными числами","dateRelease":"April 1, 2021","datePublication":"April 6, 2021","tags":["Критическое изменение"],"path":"[KRITIChESKOE_IZMENENIE]_Enum_bolshe_nelzya_sravnivat_s_proizvolnymi_chislami"}]}}],"pageNavDataAll":[{"name":"3.3","path":"3.3","sections":[{"name":"Повышение производительности сборки для команды --build --watch","path":"Povyshenie_proizvoditelnosti_sborki_dlya_komandy_--build_--watch","data":{"version":"3.3"}},{"name":"Улучшение поведения для типов Union указанных в качестве параметров функции","path":"Uluchshenie_povedeniya_dlya_tipov_Union_ukazannyh_v_kachestve_parametrov_funkcii","data":{"version":"3.3"}}]},{"name":"3.4","path":"3.4","sections":[{"name":"Опции компилятора --tsBuildInfoFile","path":"Opcii_kompilyatora_--tsBuildInfoFile","data":{"version":"3.4"}},{"name":"Опции компилятора --incremental","path":"Opcii_kompilyatora_--incremental","data":{"version":"3.4"}},{"name":"Массивоподобные readonly типы","path":"Massivopodobnye_readonly_tipy","data":{"version":"3.4"}},{"name":"Расширенный тип ReadonlyArray","path":"Rasshirennyi_tip_ReadonlyArray","data":{"version":"3.4"}},{"name":"Привидение к константе (const assertion)","path":"Prividenie_k_konstante_(const_assertion)","data":{"version":"3.4"}},{"name":"Проверка типов для globalThis","path":"Proverka_tipov_dlya_globalThis","data":{"version":"3.4"}}]},{"name":"3.5","path":"3.5","sections":[{"name":"Вспомогательный тип Omit","path":"Vspomogatelnyi_tip_Omit","data":{"version":"3.5"}},{"name":"Улучшение механизма проверки избыточных полей в объединённых типах (Union types)","path":"Uluchshenie_mehanizma_proverki_izbytochnyh_polei_v_obedinennyh_tipah_(Union_types)","data":{"version":"3.5"}},{"name":"Введение нового флага --allowUmdGlobalAccess","path":"Vvedenie_novogo_flaga_--allowUmdGlobalAccess","data":{"version":"3.5"}},{"name":"Улучшение механизма проверки объединенных типов","path":"Uluchshenie_mehanizma_proverki_obedinennyh_tipov","data":{"version":"3.5"}},{"name":"Улучшение механизма вывода типа высшего порядка для обобщенных конструкторов","path":"Uluchshenie_mehanizma_vyvoda_tipa_vysshego_poryadka_dlya_obobshchennyh_konstruktorov","data":{"version":"3.5"}},{"name":"Неявное ограничение обобщенных параметров типом unknown","path":"Neyavnoe_ogranichenie_obobshchennyh_parametrov_tipom_unknown","data":{"version":"3.5"}},{"name":"Изменение правил для типа unknown и индексной сигнатуре","path":"Izmenenie_pravil_dlya_tipa_unknown_i_indeksnoi_signature","data":{"version":"3.5"}},{"name":"Изменение логики для Object.keys для версии es5","path":"Izmenenie_logiki_dlya_Object.keys_dlya_versii_es5","data":{"version":"3.5"}}]},{"name":"3.6","path":"3.6","sections":[{"name":"Повышение типобезопасности генераторов","path":"Povyshenie_tipobezopasnosti_generatorov","data":{"version":"3.6"}},{"name":"Добавление хелпера имитирующего механизм spread array при компиляции в ecmascript ниже версии 6 при неактивном флаге --downlevelIteration","path":"Dobavlenie_helpera_imitiruushchego_mehanizm_spread_array_pri_kompilyacii_v_ecmascript_nije_versii_6_pri_neaktivnom_flage_--downlevelIteration","data":{"version":"3.6"}},{"name":"Расширение системы типов типами представляющими структуры данных только для чтения","path":"Rasshirenie_sistemy_tipov_tipami_predstavlyaushchimi_struktury_dannyh_tolko_dlya_chteniya","data":{"version":"3.6"}},{"name":"Строковой идентификатор функции-конструктора","path":"Strokovoi_identifikator_funkcii-konstruktora","data":{"version":"3.6"}},{"name":"Расширение вывода об ошибках при работе с Promise","path":"Rasshirenie_vyvoda_ob_oshibkah_pri_rabote_s_Promise","data":{"version":"3.6"}},{"name":"Слияние одноименных классов и функций из окружающего контекста","path":"Sliyanie_odnoimennyh_klassov_i_funkcii_iz_okrujaushchego_konteksta","data":{"version":"3.6"}},{"name":"Добавлена поддержка Unicode для идентификаторов","path":"Dobavlena_podderjka_Unicode_dlya_identifikatorov","data":{"version":"3.6"}},{"name":"Поддержка import.meta для SystemJS","path":"Podderjka_import.meta_dlya_SystemJS","data":{"version":"3.6"}},{"name":"get и set в окружающем контексте","path":"get_i_set_v_okrujaushchem_kontekste","data":{"version":"3.6"}},{"name":"Api для поддержки --build и --incremental","path":"Api_dlya_podderjki_--build_i_--incremental","data":{"version":"3.6"}},{"name":"Интеллектуальное определение синтаксиса авто-импорта","path":"Intellektualnoe_opredelenie_sintaksisa_avto-importa","data":{"version":"3.6"}}]},{"name":"3.7","path":"3.7","sections":[{"name":"Оператор опциональной последовательности (?.)","path":"Operator_opcionalnoi_posledovatelnosti_(?.)","data":{"version":"3.7-rc"}},{"name":"Оператор объединения со значением null (??)","path":"Operator_obedineniya_so_znacheniem_null_(??)","data":{"version":"3.7-rc"}},{"name":"Утверждение в сигнатуре (Signature Assertion)","path":"Utverjdenie_v_signature_(Signature_Assertion)","data":{"version":"3.7-rc"}},{"name":"Улучшена поддержка для типа never возвращаемого из функций","path":"Uluchshena_podderjka_dlya_tipa_never_vozvrashchaemogo_iz_funkcii","data":{"version":"3.7-rc"}},{"name":"Проверка не вызванных функций","path":"Proverka_ne_vyzvannyh_funkcii","data":{"version":"3.7-beta"}},{"name":"Рекурсивность для псевдонимов типов","path":"Rekursivnost_dlya_psevdonimov_tipov","data":{"version":"3.7-beta"}},{"name":"Совместное использование флагов --declaration и --allowJs","path":"Sovmestnoe_ispolzovanie_flagov_--declaration_i_--allowJs","data":{"version":"3.7-alpha"}},{"name":"@ts-nocheck в TypeScript файлах","path":"@ts-nocheck_v_TypeScript_failah","data":{"version":"3.7-alpha"}}]},{"name":"3.8","path":"3.8","sections":[{"name":"Импорт и экспорт только типа и флаг --importsNotUsedAsValues","path":"Import_i_eksport_tolko_tipa_i_flag_--importsNotUsedAsValues","data":{"version":"3.8"}},{"name":"Закрытые поля ECMAScript","path":"Zakrytye_polya_ECMAScript","data":{"version":"3.8"}},{"name":"await высшего уровня","path":"await_vysshego_urovnya","data":{"version":"3.8"}},{"name":"Реализация новой формы ре-экспорта","path":"Realizaciya_novoi_formy_re-eksporta","data":{"version":"3.8"}},{"name":"Новая конфигурационная группа параметров watchOptions","path":"Novaya_konfiguracionnaya_gruppa_parametrov_watchOptions","data":{"version":"3.8"}},{"name":"Новый флаг --assumeChangesOnlyAffectDirectDependencies","path":"Novyi_flag_--assumeChangesOnlyAffectDirectDependencies","data":{"version":"3.8"}},{"name":"Модификаторы JSDocs","path":"Modifikatory_JSDocs","data":{"version":"3.8"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Более строгие проверки объединений имеющих с индексной сигнатурой","path":"[KRITIChESKOE_IZMENENIE]_Bolee_strogie_proverki_obedinenii_imeushchih_s_indeksnoi_signaturoi","data":{"version":"3.8"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Тип object в JSDoc при активном флаге --noImplicitAny больше не расценивается как any","path":"[KRITIChESKOE_IZMENENIE]_Tip_object_v_JSDoc_pri_aktivnom_flage_--noImplicitAny_bolshe_ne_rascenivaetsya_kak_any","data":{"version":"3.8"}}]},{"name":"3.9","path":"3.9","sections":[{"name":"Улучшение вывода типа для Promise.all","path":"Uluchshenie_vyvoda_tipa_dlya_Promise.all","data":{"version":"3.9"}},{"name":"Сокращение скорости компиляции","path":"Sokrashchenie_skorosti_kompilyacii","data":{"version":"3.9"}},{"name":"Комментарная директива @ts-expect-error","path":"Kommentarnaya_direktiva_@ts-expect-error","data":{"version":"3.9"}},{"name":"Проверка вызова функции в тернарном условном операторе","path":"Proverka_vyzova_funkcii_v_ternarnom_uslovnom_operatore","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение поведения для оператора Non-Null при совместном использовании с оператором опциональной цепочки","path":"[KRITIChESKOE_IZMENENIE]_Izmenenie_povedeniya_dlya_operatora_Non-Null_pri_sovmestnom_ispolzovanii_s_operatorom_opcionalnoi_cepochki","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Возникновение ошибки при наличии в строке закрывающей фигурной или угловатой скобки в файлах с расширением TSX","path":"[KRITIChESKOE_IZMENENIE]_Vozniknovenie_oshibki_pri_nalichii_v_stroke_zakryvaushchei_figurnoi_ili_uglovatoi_skobki_v_failah_s_rasshireniem_TSX","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Повышение уровня проверки необязательных полей для типов определяющих тип пересечение","path":"[KRITIChESKOE_IZMENENIE]_Povyshenie_urovnya_proverki_neobyazatelnyh_polei_dlya_tipov_opredelyaushchih_tip_peresechenie","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Определение типа пересечения дискриминантными полями","path":"[KRITIChESKOE_IZMENENIE]_Opredelenie_tipa_peresecheniya_diskriminantnymi_polyami","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Параметр типа расширяющий тип any больше не наследует его характеристики","path":"[KRITIChESKOE_IZMENENIE]_Parametr_tipa_rasshiryaushchii_tip_any_bolshe_ne_nasleduet_ego_harakteristiki","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] get и set больше не перечисляемы","path":"[KRITIChESKOE_IZMENENIE]_get_i_set_bolshe_ne_perechislyaemy","data":{"version":"3.9"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] export * теперь всегда включается в сборку","path":"[KRITIChESKOE_IZMENENIE]_export_*_teper_vsegda_vkluchaetsya_v_sborku","data":{"version":"3.9"}}]},{"name":"4.0","path":"4.0","sections":[{"name":"Вариативный кортеж","path":"Variativnyi_kortej","data":{"version":"4.0"}},{"name":"Помеченные элементы кортежа","path":"Pomechennye_elementy_korteja","data":{"version":"4.0"}},{"name":"Операторы присваивания короткого замыкания","path":"Operatory_prisvaivaniya_korotkogo_zamykaniya","data":{"version":"4.0"}},{"name":"Вывод типов для полей класса по параметрам конструктора","path":"Vyvod_tipov_dlya_polei_klassa_po_parametram_konstruktora","data":{"version":"4.0"}},{"name":"unknown как тип исключения блока catch","path":"unknown_kak_tip_isklucheniya_bloka_catch","data":{"version":"4.0"}},{"name":"--noEmit совмещенный с --incremental","path":"--noEmit_sovmeshchennyi_s_--incremental","data":{"version":"4.0"}},{"name":"Пользовательская фабрика jsx фрагментов","path":"Polzovatelskaya_fabrika_jsx_fragmentov","data":{"version":"4.0"}},{"name":"Добавление комментарной директивы @deprecated","path":"Dobavlenie_kommentarnoi_direktivy_@deprecated","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение lib.d.ts","path":"[KRITIChESKOE_IZMENENIE]_Izmenenie_lib.d.ts","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Переопределение аксессоров полем и наоборот теперь является ошибкой","path":"[KRITIChESKOE_IZMENENIE]_Pereopredelenie_aksessorov_polem_i_naoborot_teper_yavlyaetsya_oshibkoi","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Операнды для delete должны быть необязательными","path":"[KRITIChESKOE_IZMENENIE]_Operandy_dlya_delete_doljny_byt_neobyazatelnymi","data":{"version":"4.0"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение фабричного api Nodejs","path":"[KRITIChESKOE_IZMENENIE]_Izmenenie_fabrichnogo_api_Nodejs","data":{"version":"4.0"}}]},{"name":"4.1","path":"4.1","sections":[{"name":"Изменение механизма проверки индексной сигнатуры","path":"Izmenenie_mehanizma_proverki_indeksnoi_signatury","data":{"version":"4.1@beta_1"}},{"name":"Шаблонный литеральный строковый тип","path":"Shablonnyi_literalnyi_strokovyi_tip","data":{"version":"4.1@beta"}},{"name":"Переопределение ключей в сопоставленных типах","path":"Pereopredelenie_kluchei_v_sopostavlennyh_tipah","data":{"version":"4.1@beta"}},{"name":"Рекурсивные условные типы","path":"Rekursivnye_uslovnye_tipy","data":{"version":"4.1@beta"}},{"name":"paths без baseUrl","path":"paths_bez_baseUrl","data":{"version":"4.1@beta"}},{"name":"checkJs не требует активации allowJs","path":"checkJs_ne_trebuet_aktivacii_allowJs","data":{"version":"4.1@beta"}},{"name":"jsx фабрики для React 17","path":"jsx_fabriki_dlya_React_17","data":{"version":"4.1@beta"}},{"name":"Поддержка тега @see для JSDoc","path":"Podderjka_tega_@see_dlya_JSDoc","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] abstract больше не совместим с async","path":"[KRITIChESKOE_IZMENENIE]_abstract_bolshe_ne_sovmestim_s_async","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] any и unknown доминируют в ложных позициях","path":"[KRITIChESKOE_IZMENENIE]_any_i_unknown_dominiruut_v_lojnyh_poziciyah","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] --declaration и --outFile требуют имя корневого пакета","path":"[KRITIChESKOE_IZMENENIE]_--declaration_i_--outFile_trebuut_imya_kornevogo_paketa","data":{"version":"4.1@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] параметры resolve теперь обязательные","path":"[KRITIChESKOE_IZMENENIE]_parametry_resolve_teper_obyazatelnye","data":{"version":"4.1@beta"}}]},{"name":"4.2","path":"4.2","sections":[{"name":"Изменение поведения указания остаточных типов в кортеже","path":"Izmenenie_povedeniya_ukazaniya_ostatochnyh_tipov_v_korteje","data":{"version":"4.2"}},{"name":"Изменение вывода для псевдонимов типов","path":"Izmenenie_vyvoda_dlya_psevdonimov_tipov","data":{"version":"4.2"}},{"name":"Ужесточение правил проверки для in-оператора","path":"Ujestochenie_pravil_proverki_dlya_in-operatora","data":{"version":"4.2"}},{"name":"Новый флаг --noPropertyAccessFromIndexSignature","path":"Novyi_flag_--noPropertyAccessFromIndexSignature","data":{"version":"4.2"}},{"name":"Модификатор abstract для описания типа конструктора","path":"Modifikator_abstract_dlya_opisaniya_tipa_konstruktora","data":{"version":"4.2"}},{"name":"Понимание структуры проекта с флагом --explainFiles","path":"Ponimanie_struktury_proekta_s_flagom_--explainFiles","data":{"version":"4.2"}},{"name":"Проверка вызова функций в логических выражениях","path":"Proverka_vyzova_funkcii_v_logicheskih_vyrajeniyah","data":{"version":"4.2"}},{"name":"Смягчение правил между необязательными членами и строковых индексных сигнатур","path":"Smyagchenie_pravil_mejdu_neobyazatelnymi_chlenami_i_strokovyh_indeksnyh_signatur","data":{"version":"4.2"}},{"name":"Деструктурированные переменные можно явно пометить как неиспользуемые","path":"Destrukturirovannye_peremennye_mojno_yavno_pometit_kak_neispolzuemye","data":{"version":"4.2"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Обновление lib.d.ts","path":"[KRITIChESKOE_IZMENENIE]_Obnovlenie_lib.d.ts","data":{"version":"4.2"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] noImplicitAny и новое поведение для оператора yield тип которого не может быть установлен явно","path":"[KRITIChESKOE_IZMENENIE]_noImplicitAny_i_novoe_povedenie_dlya_operatora_yield_tip_kotorogo_ne_mojet_byt_ustanovlen_yavno","data":{"version":"4.2"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Проверка вызова функций в условных операторах приурочена к флагу --strictNullChecks","path":"[KRITIChESKOE_IZMENENIE]_Proverka_vyzova_funkcii_v_uslovnyh_operatorah_priurochena_k_flagu_--strictNullChecks","data":{"version":"4.2"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Лимит для механизма spread в кортежах","path":"[KRITIChESKOE_IZMENENIE]_Limit_dlya_mehanizma_spread_v_kortejah","data":{"version":"4.2"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение правил для оператора in","path":"[KRITIChESKOE_IZMENENIE]_Izmenenie_pravil_dlya_operatora_in","data":{"version":"4.2"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Расширение .d.ts теперь нельзя использовать в путях импорта","path":"[KRITIChESKOE_IZMENENIE]_Rasshirenie_.d.ts_teper_nelzya_ispolzovat_v_putyah_importa","data":{"version":"4.2"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменение типа параметра функции обратного вызова передаваемой в качестве аргумента функции visitNode","path":"[KRITIChESKOE_IZMENENIE]_Izmenenie_tipa_parametra_funkcii_obratnogo_vyzova_peredavaemoi_v_kachestve_argumenta_funkcii_visitNode","data":{"version":"4.2"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Отмена поведения литерального вывода шаблона из версии 4.2@beta","path":"[KRITIChESKOE_IZMENENIE]_Otmena_povedeniya_literalnogo_vyvoda_shablona_iz_versii_4.2@beta","data":{"version":"4.2"}}]},{"name":"4.3","path":"4.3","sections":[{"name":"Отдельные типы аксеcсоров","path":"Otdelnye_tipy_aksecsorov","data":{"version":"4.3@beta"}},{"name":"Модификатор override и флаг --noImplicitOverride","path":"Modifikator_override_i_flag_--noImplicitOverride","data":{"version":"4.3@beta"}},{"name":"Улучшение работы шаблонного строкового типа","path":"Uluchshenie_raboty_shablonnogo_strokovogo_tipa","data":{"version":"4.3@beta"}},{"name":"Изменение поведения для объекта Promise в условных выражениях","path":"Izmenenie_povedeniya_dlya_obekta_Promise_v_uslovnyh_vyrajeniyah","data":{"version":"4.3@beta"}},{"name":"Индексные сигнатуры класса","path":"Indeksnye_signatury_klassa","data":{"version":"4.3@beta"}},{"name":"Расширение возможностей ECMAScript приватного модификатора и флаг --useDefineForClassFields","path":"Rasshirenie_vozmojnostei_ECMAScript_privatnogo_modifikatora_i_flag_--useDefineForClassFields","data":{"version":"4.3@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Изменения в lib.d.ts","path":"[KRITIChESKOE_IZMENENIE]_Izmeneniya_v_lib.d.ts","data":{"version":"4.3@beta"}},{"name":"[КРИТИЧЕСКОЕ ИЗМЕНЕНИЕ] Enum больше нельзя сравнивать с произвольными числами","path":"[KRITIChESKOE_IZMENENIE]_Enum_bolshe_nelzya_sravnivat_s_proizvolnymi_chislami","data":{"version":"4.3@beta"}}]}]}},"staticQueryHashes":["408059355","63159454"]}